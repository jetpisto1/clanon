import os
import discord
import random
import json
from discord.ext import commands


PREFIX = '-'
# 환경 변수에서 토큰 값 읽어오기



# 사용자 포인트를 저장할 딕셔너리
user_points = {}
client = discord.Client()
client = commands.Bot(command_prefix='-')

@client.event
async def on_ready():
    print(f'봇 이름: {client.user.name}')
    print(f'봇 ID: {client.user.id}')

@client.event
async def on_message(message):
    if message.author == client.user:
        return

    if message.content.startswith('-팀'):
        # 입력한 단어 목록 확인
        content = message.content.split(' ', 1)
        if len(content) != 2:
            await message.channel.send('⚠️ 올바른 명령어 형식이 아닙니다. !팀 [베티 캔 DRX] 형태로 입력해주세요.')
            return

        word_list = content[1].split()

        # 입력한 단어 개수 확인
        if len(word_list) < 3:
            await message.channel.send('⚠️ 인원이 충분하지 않습니다. 3명 이상의 인원을 입력해주세요.')
            return

        # 단어를 랜덤하게 선택하여 3개로 나눔
        random.shuffle(word_list)
        team_count = len(word_list) // 3
        remaining_words = len(word_list) % 3

        divided_words = [word_list[i*3:(i+1)*3] for i in range(team_count)]

        # 남은 단어를 2개로 나눔
        if remaining_words == 2:
            divided_words.append(word_list[-2:])
        elif remaining_words == 1:
            divided_words.append(word_list[-1:])

        # 결과 출력
        embed = discord.Embed(title="팀 분배 결과", color=discord.Color.teal())
        for i, words in enumerate(divided_words):
            words_str = ', '.join(words)
            embed.add_field(name=f"{i+1} Team", value=f'```{words_str}```', inline=False)
        await message.channel.send(embed=embed)


    if message.content.startswith('-마'):
        n = int(message.content.split()[1])

        words = [
            '스네이크맨', '검은수염', '나미', '로우', '루치', '브룩', '시라호시', '프랑키', '아카이누', '키자루', 
            '아오키지', '샹크스', '상디', '타시기', '키드', '드래곤', '빅맘', '센고쿠', '제트', '시키', '미호크', '에이스', '핸콕', '오뎅', '레드필드', '시노부', '에넬'
        ]

        selected_words = random.sample(words, n)

        embed = discord.Embed(title='🗸 마뎀 밴살 결과', color=discord.Color.red())
        embed.description = ' '.join(selected_words)
        await message.channel.send(embed=embed)


    if message.content.startswith('-물'):
        n = int(message.content.split()[1])

        words = [
            '도플라밍고', '로빈', '루피', '바질호킨스', '사보', '우솝', '조로', '징베', '쵸파', '후지토라', 
            '료쿠규', '야마토', '카타쿠리', '킹', '크로커다일', '레베카', '흰수염', '로져', '거프', '레일리', '카이도', '버기', '카벤딧슈'
        ]

        selected_words = random.sample(words, n)

        embed = discord.Embed(title='🗸 물뎀 밴살 결과', color=discord.Color.blue())
        embed.description = ' '.join(selected_words)
        await message.channel.send(embed=embed)

    if '-도움말' in message.content:
        embed = discord.Embed(title='❔ 도움말', color=discord.Color.gold())
        embed.description = '```\n-물 [숫자]\n-마 [숫자]\n-다이스\n-팀\n-랭킹```'
        await message.channel.send(embed=embed)

    if message.content == '-다이스':
        random_number = random.randint(1, 100)

        embed = discord.Embed(title='🎲 다이스 결과', color=discord.Color.green())
        embed.add_field(name=' ', value=str(random_number), inline=False)
        await message.channel.send(embed=embed)


    # 포인트 지급 명령어
    if message.content.startswith(f'{PREFIX}지급'):
        nickname, points = message.content.split(' ', 2)[1:]

        if nickname in user_points:
            current_points = user_points[nickname]
        else:
            current_points = 0

        points = int(points)
        total_points = current_points + points
        user_points[nickname] = total_points

        await message.channel.send(f'{nickname}, 점수가 지급되었습니다. 현재 점수: {total_points}')

    if message.content.startswith('-지급'):
        content = message.content.split(' ', 2)
        if len(content) != 3:
            await message.channel.send('올바른 명령어 형식이 아닙니다. -지급 [사용자] [점수] 형태로 입력해주세요.')
            return

        user = content[1]
        points = int(content[2])

        
        # 사용자 점수 갱신
        if user in user_points:
            user_points[user] += points
        else:
            user_points[user] = points

        await message.channel.send(f'{user}에게 {points}점이 지급되었습니다.')

    elif message.content.startswith('-조회'):
        content = message.content.split(' ', 1)
        if len(content) != 2:
            await message.channel.send('올바른 명령어 형식이 아닙니다. -조회 [사용자] 형태로 입력해주세요.')
            return

        user = content[1]

        # 사용자 점수 조회
        if user in user_points:
            points = user_points[user]
            await message.channel.send(f'{user}의 점수는 {points}점입니다.')
        else:
            await message.channel.send(f'{user}의 점수를 찾을 수 없습니다.')


    elif message.content == '-랭킹':
        # 랭킹 표시
        sorted_users = sorted(user_points.items(), key=lambda x: x[1], reverse=True)
        ranking = []
        for i, (user, points) in enumerate(sorted_users[:8], start=1):
            if i <= 3:
                emoji = ":crown:" if i == 1 else ":trophy:" if i == 2 else ":military_medal:"
                ranking.append(f"{emoji} {user} - {points}점")
            else:
                ranking.append(f"{i}등 {user} - {points}점")
        
        embed = discord.Embed(title="랭킹 TOP 8", color=0xffd700)
        embed.description = "\n".join(ranking)
        await message.channel.send(embed=embed)

@client.event
async def on_member_join(member):
    # 새로운 멤버가 들어왔을 때 실행되는 코드

    # 환영 메시지 작성
    welcome_message = f'**🎉 {member.mention} 님, 환영합니다!**'
    welcome_message += '\n서버에 오신 것을 환영합니다. 함께 즐거운 시간 보내요!'

    # 임베드 생성
    embed = discord.Embed(title='서버 입장', description=welcome_message, color=0x00ff00)

    # 채널 찾기 (메시지를 업로드할 채널의 ID 또는 이름을 지정해주세요)
    channel_id = 835570354830442528  # 업로드할 채널의 ID
    channel = client.get_channel(channel_id)

    # 환영 메시지 업로드
    await channel.send(embed=embed)

# 디스코드 봇 토큰을 입력합니다.
    client.run(token)